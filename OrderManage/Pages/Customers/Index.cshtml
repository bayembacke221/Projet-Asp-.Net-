@page "{searchString?}"
@model OrderManage.Pages.Customers.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create"><button type="button" class="btn btn-success">Create New <i class="fa-solid fa-person-circle-plus"></i></button></a>
     <header style="background:none;margin-left:-9%;width:50%"  class="header">
         
          <form action="" class="search-form">
               <input type="search" id="search-box" asp-for="SearchCustomers" placeholder="search here...">
               <label for="search-box" class="fas fa-search"></label>
          </form>
               
    </header>
</p>

<br/>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].CompanyName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].ContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].ContactTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customers[0].Fax)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Customers) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fax)
            </td>
            <td>
                <div  class="d-grid gap-2  d-md-flex">
                    <a asp-page="./Edit" asp-route-id="@item.CustomerId"><button type="button" style="width:70px" class="btn btn-warning"><i class="fa-solid fa-pen-to-square"></i></button></a> 
                    <a asp-page="./Details" asp-route-id="@item.CustomerId"><button type="button" class="btn btn-info"><i class="fa-solid fa-barcode"></i></button></a> 
                    <a asp-page="./Delete" asp-route-id="@item.CustomerId"><button type="button" style="width:75px" class="btn btn-danger"><i class="fa-solid fa-trash-can"></i></button></a>
            
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Customers.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Customers.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    <i class="fa-solid fa-circle-arrow-left"></i>
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Customers.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
   <i class="fa-solid fa-circle-arrow-right"></i>
</a>